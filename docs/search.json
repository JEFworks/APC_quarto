[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Annual Article Processing Charges (APCs) and number of gold and hybrid open access articles in Web of Science indexed journals published by Elsevier, Sage, Springer-Nature, Taylor & Francis and Wiley 2015-2018",
    "section": "",
    "text": "I use Quarto to build interactive data visualizations with Observable JS using data from Butler, L.-A., Matthias, L., Simard, M.-A., Mongeon, P., & Haustein, S. (2023). The Oligopoly’s Shift to Open Access. How the Big Five Academic Publishers Profit from Article Processing Charges. Quantitative Science Studies.\nData from the original publication was downloaded from Zenodo. Non-numeric values such as ‘$480 per page’ in the apc_lower column were removed for ease of interpretability and data visualization. Consult the ReadMe.csv for more descriptions and notes of the variables.\n\n\nAPCs\nAPCs.csv: contains the annual APCs for gold and hybrid OA journals indexed in Web of Science published by the oligopoly of academic publishers (Elsevier, Sage, Springer-Nature, Taylor & Francis, Wiley) between 2015 and 2018 including the total estimate of APCs paid per journal per year.\n\n\nCode\ndata = FileAttachment(\"data/APCs.csv\").csv({ typed: true })\ncolnames = Object.keys(data[0])\n// make dropdowns\nviewof feature = Inputs.select(\n  colnames,\n  {value: \"parent_publisher\"}\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLower estimate of APC\n\n\nCode\n// render plot\nPlot.plot({\n  grid: true,\n  width: 500,\n  height: 300,\n  marks: [\n    Plot.frame(),\n    Plot.boxY(data, {\n    y: 'apc_lower',\n    x: feature\n    }),\n    Plot.dot(data, {\n    y: 'apc_lower',\n    x: feature,\n    tip: true,\n    channels: {\n      journal: 'journal_name'\n    }\n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\nUpper estimate of APC\n\n\nCode\n// render plot\nPlot.plot({\n  grid: true,\n  width: 500,\n  height: 300,\n  marks: [\n    Plot.frame(),\n    Plot.boxY(data, {\n    y: 'apc_upper',\n    x: feature\n    }),\n    Plot.dot(data, {\n    y: 'apc_upper',\n    x: feature,\n    tip: true,\n    channels: {\n      journal: 'journal_name'\n    }\n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nOECD\noecd.csv: contains the fractionalized number of annual gold and hybrid OA articles by oligopoly publishers between 2015 and 2018 and the total estimate of fractionalized APCs per discipline per journal per year.\n\n\nCode\ndata2 = FileAttachment(\"data/oecd.csv\").csv({ typed: true })\ncolnames2 = Object.keys(data2[0])\n// make dropdowns\nviewof feature2x = Inputs.select(\n  colnames2,\n  {value: \"apc_total\"}\n)\nviewof feature2y = Inputs.select(\n  colnames2,\n  {value: \"parent_publisher\"}\n)\n// render plot\nPlot.plot({\n  grid: true,\n  marginRight: 200,\n  marginLeft: 200,\n  width: 800,\n  height: 600,\n  marks: [\n    Plot.frame(),\n    Plot.dot(data2, {\n    x: feature2x,\n    y: feature2y, \n    fy: 'oecd_major',\n    tip: true,\n    channels: {\n      journal: 'journal_name'\n    }\n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCountries\ncountries.csv: contains the fractionalized number of annual gold and hybrid OA articles by oligopoly publishers between 2015 and 2018 and the total estimate of fractionalized APCs paid per country per journal per year.\n\n\nCode\ndata3 = FileAttachment(\"data/countries.csv\").csv({ typed: true })\ncolnames3 = Object.keys(data3[0])\n// make dropdowns\nviewof feature3x = Inputs.select(\n  colnames3,\n  {value: \"apc_total\"}\n)\nviewof feature3y = Inputs.select(\n  colnames3,\n  {value: \"parent_publisher\"}\n)\n// render plot\nPlot.plot({\n  grid: true,\n  marginRight: 200,\n  marginLeft: 200,\n  width: 800,\n  height: 10000,\n  marks: [\n    Plot.frame(),\n    Plot.dot(data3, {\n    x: feature3x,\n    y: feature3y, \n    fy: 'country',\n    tip: true,\n    channels: {\n      journal: 'journal_name'\n    }\n    })\n  ]\n})"
  }
]